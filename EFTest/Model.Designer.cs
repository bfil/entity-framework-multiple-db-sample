//------------------------------------------------------------------------------
// <auto-generated>
//    Codice generato da un modello.
//
//    Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//    Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadati relazioni EDM

[assembly: EdmRelationshipAttribute("Model", "AutoreLibro", "Autore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EFTest.Autore), "Libro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EFTest.Libro))]

#endregion

namespace EFTest
{
    #region Contesti
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    public partial class EFTestEntities : ObjectContext
    {
        #region Costruttori
    
        /// <summary>
        /// Inizializza un nuovo oggetto EFTestEntities utilizzando la stringa di connessione trovata nella sezione 'EFTestEntities' del file di configurazione dell'applicazione.
        /// </summary>
        public EFTestEntities() : base("name=EFTestEntities", "EFTestEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Inizializzare un nuovo oggetto EFTestEntities.
        /// </summary>
        public EFTestEntities(string connectionString) : base(connectionString, "EFTestEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Inizializzare un nuovo oggetto EFTestEntities.
        /// </summary>
        public EFTestEntities(EntityConnection connection) : base(connection, "EFTestEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Metodi parziali
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Proprietà ObjectSet
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<Autore> Autori
        {
            get
            {
                if ((_Autori == null))
                {
                    _Autori = base.CreateObjectSet<Autore>("Autori");
                }
                return _Autori;
            }
        }
        private ObjectSet<Autore> _Autori;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<Libro> Libri
        {
            get
            {
                if ((_Libri == null))
                {
                    _Libri = base.CreateObjectSet<Libro>("Libri");
                }
                return _Libri;
            }
        }
        private ObjectSet<Libro> _Libri;

        #endregion
        #region Metodi AddTo
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet Autori. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAutori(Autore autore)
        {
            base.AddObject("Autori", autore);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet Libri. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLibri(Libro libro)
        {
            base.AddObject("Libri", libro);
        }

        #endregion
    }
    

    #endregion
    
    #region Entità
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Autore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Autore : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Creare un nuovo oggetto Autore.
        /// </summary>
        /// <param name="id">Valore iniziale della proprietà ID.</param>
        public static Autore CreateAutore(global::System.Int32 id)
        {
            Autore autore = new Autore();
            autore.ID = id;
            return autore;
        }

        #endregion
        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Età
        {
            get
            {
                return _Età;
            }
            set
            {
                OnEtàChanging(value);
                ReportPropertyChanging("Età");
                _Età = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Età");
                OnEtàChanged();
            }
        }
        private Nullable<global::System.Int16> _Età;
        partial void OnEtàChanging(Nullable<global::System.Int16> value);
        partial void OnEtàChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPensione
        {
            get
            {
                return _InPensione;
            }
            set
            {
                OnInPensioneChanging(value);
                ReportPropertyChanging("InPensione");
                _InPensione = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPensione");
                OnInPensioneChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPensione;
        partial void OnInPensioneChanging(Nullable<global::System.Boolean> value);
        partial void OnInPensioneChanged();

        #endregion
    
        #region Proprietà di navigazione
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AutoreLibro", "Libro")]
        public EntityCollection<Libro> Libro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Libro>("Model.AutoreLibro", "Libro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Libro>("Model.AutoreLibro", "Libro", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Libro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Libro : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Creare un nuovo oggetto Libro.
        /// </summary>
        /// <param name="id">Valore iniziale della proprietà ID.</param>
        public static Libro CreateLibro(global::System.Int32 id)
        {
            Libro libro = new Libro();
            libro.ID = id;
            return libro;
        }

        #endregion
        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Titolo
        {
            get
            {
                return _Titolo;
            }
            set
            {
                OnTitoloChanging(value);
                ReportPropertyChanging("Titolo");
                _Titolo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Titolo");
                OnTitoloChanged();
            }
        }
        private global::System.String _Titolo;
        partial void OnTitoloChanging(global::System.String value);
        partial void OnTitoloChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DataDiPubblicazione
        {
            get
            {
                return _DataDiPubblicazione;
            }
            set
            {
                OnDataDiPubblicazioneChanging(value);
                ReportPropertyChanging("DataDiPubblicazione");
                _DataDiPubblicazione = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataDiPubblicazione");
                OnDataDiPubblicazioneChanged();
            }
        }
        private Nullable<global::System.DateTime> _DataDiPubblicazione;
        partial void OnDataDiPubblicazioneChanging(Nullable<global::System.DateTime> value);
        partial void OnDataDiPubblicazioneChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Prezzo
        {
            get
            {
                return _Prezzo;
            }
            set
            {
                OnPrezzoChanging(value);
                ReportPropertyChanging("Prezzo");
                _Prezzo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prezzo");
                OnPrezzoChanged();
            }
        }
        private Nullable<global::System.Decimal> _Prezzo;
        partial void OnPrezzoChanging(Nullable<global::System.Decimal> value);
        partial void OnPrezzoChanged();

        #endregion
    
        #region Proprietà di navigazione
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AutoreLibro", "Autore")]
        public Autore Autore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Autore>("Model.AutoreLibro", "Autore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Autore>("Model.AutoreLibro", "Autore").Value = value;
            }
        }
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Autore> AutoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Autore>("Model.AutoreLibro", "Autore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Autore>("Model.AutoreLibro", "Autore", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
